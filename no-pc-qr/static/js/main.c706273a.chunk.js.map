{"version":3,"sources":["App.js","index.js"],"names":["App","props","changeSelectedPhoto","event","input","target","removeStopScrollWindow","setState","state","defaultState","cropperHeight","files","indexOf","type","setActiveSnack","snacks","errorImageLoading","fr","FileReader","onload","e","setImage","result","onerror","console","log","readAsDataURL","move","x","y","newCurrentX","currentPosCroppedX","shiftX","newCurrentY","currentPosCroppedY","shiftY","imgNode","document","getElementById","currentHeightCropper","offsetHeight","currentWidthCropper","offsetWidth","croppedImageStyles","transform","croppedImageOverflowSyles","currentPosImageX","currentPosImageY","stopScrollWindow","lastScrollPos","window","scrollY","wrapCropperStyles","overflow","body","classList","add","getElementsByTagName","remove","scrollTo","onEndCrop","moveImage","imageStyles","onEndImageMove","scaleImagesMove","elem","originalEvent","isRight","value","match","newCurrentWidth","newCurrentHeight","cropperImageStyles","cropperStyles","width","height","onEndScaleImagesMove","getQrFromCrop","offsetCropX","getBoundingClientRect","offsetCropY","Math","floor","imageWidth","imageHeight","canvas","createElement","ctx","getContext","img","Image","drawImage","imageData","getImageData","clearRect","putImageData","getQRFromImage","src","toDataURL","image","setQrResult","res","qrResult","openThisImage","connect","send","images","wrapCropperContentStyles","activeSnack","currentCroppedX","currentCroppedY","qrDecodedSuccessfull","qrDecodedSnack","qrDecodedError","errorImageLoadingSnack","QrScanner","WORKER_PATH","imgHeight","innerWidth","snack","this","success","onClose","before","fill","scanImage","then","catch","error","activePanel","id","theme","className","style","map","controllerType","i","key","onStart","onMove","onEnd","onTouchStart","startTouch","onClick","wordBreak","marginTop","marginBottom","componentDecorator","href","text","rel","split","a","size","accept","onChange","level","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c706273a.chunk.js","sourcesContent":["import React from 'react';\n\nimport QrScanner from 'qr-scanner';\nimport connect from '@vkontakte/vk-connect';\n\nimport { Panel, PanelHeader, File, Div, View, Touch, Button, Link, Snackbar, Group } from '@vkontakte/vkui';\n\nimport Linkify from 'react-linkify';\n\n\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Fullscreen from '@vkontakte/icons/dist/24/fullscreen';\nimport Icon24Qr from '@vkontakte/icons/dist/24/qr';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.defaultState = {\n\t\t\timage: '',\n\t\t\tcropperStyles: {},\n\t\t\tcroppedImageStyles: {},\n\t\t\tcropperImageStyles: {},\n\t\t\tcroppedImageOverflowSyles: {},\n\t\t\tcurrentPosCroppedX: 0,\n\t\t\tcurrentPosCroppedY: 0,\n\t\t\tcurrentPosImageX: 0,\n\t\t\tcurrentPosImageY: 0,\n\t\t\tcurrentHeightCropper: 100,\n\t\t\tcurrentWidthCropper: 100,\n\t\t\twrapCropperStyles: {},\n\t\t\twrapCropperContentStyles: {},\n\t\t\tqrResult: \"\",\n\t\t}\n\n\t\tthis.state = {\n\t\t\t...this.defaultState,\n\t\t\tactiveSnack: null\n\t\t}\n\t\t\n\t\tthis.currentCroppedX = this.state.currentPosCroppedX;\n\t\tthis.currentCroppedY = this.state.currentCroppedY;\n\n\t\tthis.currentPosImageX = this.state.currentPosImageX;\n\t\tthis.currentPosImageY = this.state.currentPosImageY;\n\n\t\tthis.currentHeightCropper = this.state.currentHeightCropper;\n\t\tthis.currentWidthCropper = this.state.currentWidthCropper;\n\t\tthis.lastScrollPos = 0;\n\n\t\tthis.snacks = {\n\t\t\tqrDecodedSuccessfull: this.qrDecodedSnack(),\n\t\t\tqrDecodedError: this.qrDecodedSnack(false),\n\t\t\terrorImageLoading: this.errorImageLoadingSnack()\n\t\t}\n\t\t\n\t\tQrScanner.WORKER_PATH = 'libs/qr-scanner/qr-scanner-worker.min.js';\n\t}\n\n\tsetImage (src=\"\", readQr=true) {\n\t\tlet img = new Image();\n\t\timg.src = src;\n\t\timg.onload = () => {\n\t\t\t\n\t\t\t\n\t\t\tlet imgHeight = img.height*window.innerWidth/img.width;;\n\n\n\t\t\tlet currentPosCroppedX = window.innerWidth / 2 - this.defaultState.currentWidthCropper / 2;\n\t\t\tlet currentPosCroppedY = (imgHeight / 2) - this.defaultState.currentHeightCropper / 2;\n\n\t\t\tthis.setState({\n\t\t\t\timage: src,\n\t\t\t\timageWidth: img.width,\n\t\t\t\timageHeight: img.height,\n\t\t\t\tcurrentPosCroppedX,\n\t\t\t\tcurrentPosCroppedY,\n\t\t\t\tcroppedImageStyles: {\n\t\t\t\t\ttransform: `translateX(${currentPosCroppedX}px) translateY(${currentPosCroppedY}px)`\n\t\t\t\t},\n\t\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t\ttransform: `translateX(${-(currentPosCroppedX)}px) translateY(${-(currentPosCroppedY)}px)`\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tchangeSelectedPhoto = (event) => {\n\t\tlet input = event.target;\n\t\tthis.removeStopScrollWindow();\n\t\t\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t...this.defaultState\n\t\t});\n\t\t\n\t\tthis.cropperHeight = 0;\n\n\t\tif (input && input.files && input.files[0]) {\n\t\t\t\n\t\t\tif ([\"image/x-png\", \"image/png\", \"image/jpeg\", \"image/jpg\"].indexOf(input.files[0].type) === -1) {\n\t\t\t\tthis.setActiveSnack(this.snacks.errorImageLoading)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fr = new FileReader();\n\t\t\t\n\t\t\tfr.onload = (e) => {\n\t\t\t\tthis.setImage(e.target.result);\n\t\t\t}\n\n\t\t\tfr.onerror = () => {\n\t\t\t\tconsole.log('Не удалось')\n\t\t\t\tthis.setActiveSnack(this.snacks.errorImageLoading);\n\t\t\t}\n\n\t\t\tfr.readAsDataURL(input.files[0]);\n\t\t}\n\t}\n\n\tsetActiveSnack (snack) {\n\t\tthis.setState({\n\t\t\tactiveSnack: snack\n\t\t});\n\t}\n\n\tqrDecodedSnack (success=true) {\n\t\treturn (<Snackbar onClose={() => this.setActiveSnack(null)} before={success ? <Icon24Done fill=\"#16C60C\"/> : <Icon24DoNotDisturb fill=\"#F44336\"/> }>{success ? \"Данные получены\" : \"QR не найден\"}</Snackbar>);\n\t}\n\n\terrorImageLoadingSnack () {\n\t\treturn (<Snackbar onClose={() => {this.setActiveSnack(null)}} before={<Icon24DoNotDisturb fill=\"#F44336\"/>}>Не удалось загрузить изображение</Snackbar>)\n\t}\n\n\tcomponentDidUpdate () {\n\t\tif (this.state.image) {\n\t\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\t\tif (imgNode && this.cropperHeight !== imgNode.offsetHeight) {\n\t\t\t\tthis.cropperHeight = imgNode.offsetHeight;\n\t\t\t\tthis.setState({\n\t\t\t\t\tcropperStyles: {\n\t\t\t\t\t\t...this.state.cropperStyles,\n\t\t\t\t\t\theight: imgNode.height\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\n\tmove = (e, x, y) => {\n\t\tlet newCurrentX = this.state.currentPosCroppedX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosCroppedY + e.shiftY;\n\t\t\n\t\tif (newCurrentX < 0) newCurrentX = 0;\n\t\tif (newCurrentY < 0) newCurrentY = 0;\n\t\t\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\n\t\tif (imgNode && newCurrentY + this.state.currentHeightCropper > imgNode.offsetHeight) {\n\t\t\t\tnewCurrentY = imgNode.offsetHeight - this.state.currentHeightCropper;\n\t\t}\n\t\t\n\t\tif (imgNode && newCurrentX + this.state.currentWidthCropper > imgNode.offsetWidth) {\n\t\t\t\tnewCurrentX = imgNode.offsetWidth - this.state.currentWidthCropper;\n\t\t}\n\n\n\t\tthis.currentPosCroppedX = newCurrentX;\n\t\tthis.currentPosCroppedY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${-(newCurrentX) + this.state.currentPosImageX}px) translateY(${-(newCurrentY ) + this.state.currentPosImageY}px)`\n\t\t\t}\n\t\t});\n\n\t}\n\n\tstopScrollWindow = () => {\n\t\t\n\t\tthis.lastScrollPos = window.scrollY;\n\n\t\tthis.setState({\n\t\t\twrapCropperStyles: {\n\t\t\t\t...this.state.wrapCropperStyles,\n\t\t\t\toverflow: \"hidden\",\n\t\t\t\ttransform: `translateY(-${window.scrollY}px)`\n\t\t\t}\n\t\t});\n\t\t\n\t\tdocument.body.classList.add(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.add(\"no-overflow\");\n\t}\n\n\tremoveStopScrollWindow = () => {\n\t\tdocument.body.classList.remove(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.remove(\"no-overflow\");\n\n\t\twindow.scrollTo(0, this.lastScrollPos);\n\t\tthis.setState({\n\t\t\twrapCropperStyles: {\n\t\t\t\t...this.state.wrapCropperStyles,\n\t\t\t\toverflow: \"auto\",\n\t\t\t\ttransform: \"none\"\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndCrop = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosCroppedX: this.currentPosCroppedX,\n\t\t\tcurrentPosCroppedY: this.currentPosCroppedY\n\t\t});\n\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tmoveImage = (e) => {\n\t\tlet newCurrentX = this.state.currentPosImageX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosImageY + e.shiftY;\n\n\t\tthis.currentPosImageX = newCurrentX;\n\t\tthis.currentPosImageY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\timageStyles: {\n\t\t\t\t...this.state.imageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${newCurrentX - this.state.currentPosCroppedX}px) translateY(${newCurrentY - this.state.currentPosCroppedY}px)`\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndImageMove = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosImageX: this.currentPosImageX,\n\t\t\tcurrentPosImageY: this.currentPosImageY\n\t\t});\n\t}\t\n\n\tscaleImagesMove = (e) => {\n\t\tlet elem = e.originalEvent.target;\n\t\t\n\t\tlet isRight = !!elem.classList.value.match(\"right\");\n\t\tlet isLeft = !!elem.classList.value.match(\"left\")\n\n\t\tlet newCurrentWidth = this.state.currentWidthCropper + (isRight ? e.shiftX : -e.shiftX);\n\t\tlet newCurrentHeight = this.state.currentHeightCropper + (isRight ? e.shiftY : -e.shiftY);\n\t\t\n\t\tif (newCurrentWidth < newCurrentHeight) {\n\t\t\tnewCurrentHeight = newCurrentWidth;\n\t\t} else {\n\t\t\tnewCurrentWidth = newCurrentHeight;\n\t\t}\n\n\t\tthis.currentWidthCropper = newCurrentWidth;\n\t\tthis.currentHeightCropper = newCurrentHeight;\n\t\t\n\t\tthis.setState({\n\t\t\tcropperImageStyles: {\n\t\t\t\t...this.state.cropperStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t},\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonEndScaleImagesMove = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentWidthCropper: this.currentWidthCropper,\n\t\t\tcurrentHeightCropper: this.currentHeightCropper\n\t\t});\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tgetQrFromCrop = () => {\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\tlet cropNode = document.getElementById(\"crop\");\n\t\tlet cropCoords = cropNode.getBoundingClientRect();\n\t\t\n\t\tlet offsetCropX = this.state.currentPosCroppedX;\n\t\tlet offsetCropY =\tthis.state.currentPosCroppedY;\n\n\t\tlet x = Math.floor(offsetCropX * this.state.imageWidth / imgNode.offsetWidth);\n\t\tlet y = Math.floor(offsetCropY * this.state.imageHeight / imgNode.offsetHeight);\n\n\t\tlet height = Math.floor(this.state.currentHeightCropper * this.state.imageHeight / imgNode.offsetHeight);\n\t\tlet width = Math.floor(this.state.currentWidthCropper * this.state.imageWidth / imgNode.offsetWidth);\n\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\n\t\tcanvas.width = this.state.imageWidth;\n\t\tcanvas.height = this.state.imageHeight;\n\n\t\tlet ctx = canvas.getContext('2d');\n\t\n\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\n\t\t\tctx.drawImage(img, 0, 0);\n\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tcanvas.height = height;\n\t\t\tcanvas.width = width;\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t\timg = new Image();\n\t\t\t\n\t\t\timg.onload = () => {\n\t\t\t\tthis.getQRFromImage(img);\n\t\t\t}\n\n\t\t\timg.src = canvas.toDataURL();\n\t\t}\n\n\t\timg.src = this.state.image;\n\t}\n\n\tgetQRFromImage (image) {\n\t\tQrScanner.scanImage(image)\n    .then(res => {\n    \tthis.setQrResult(res);\n    \tthis.setActiveSnack(this.snacks.qrDecodedSuccessfull);\n    })\n    .catch(error => {\n    \tthis.setQrResult(\"\");\n    \tthis.setActiveSnack(this.snacks.qrDecodedError);\n    });\n\t}\n\n\tsetQrResult = (res) => {\n\t\tthis.setState({\n\t\t\tqrResult: res\n\t\t});\n\t}\n\t\n\topenThisImage = () => {\n\t\tconnect.send(\"VKWebAppShowImages\", {\n\t\t\timages: [this.state.image]\n\t\t});\n\t}\n\n\n\trender () {\n\t\tlet controllers = [\"bottom-right\"];\n\n\t\treturn (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\" theme=\"white\" className={!this.state.image ? \"centering-panel\" : \"\"}>\n\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\tQR без камеры\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t{this.state.image && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"wrap-cropper\" style={this.state.wrapCropperStyles}>\n\t\t\t\t\t\t\t\t<div className=\"wrap-cropper-content\" style={this.state.wrapCropperContentStyles}>\n\t\t\t\t\t\t\t\t\t<div className=\"cropper\" style={this.state.cropperStyles}>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"crop\" id=\"crop\" style={this.state.croppedImageStyles}>\n\t\t\t\t\t\t\t\t\t\t\t\t{controllers.map((controllerType, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<Touch key={\"touch_\" + i} onStart={this.stopScrollWindow} onMove={this.scaleImagesMove} onEnd={this.onEndScaleImagesMove}>{<div className={\"crop-controller \" + controllerType}></div>}</Touch>);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Touch onStart={this.stopScrollWindow} onMove={this.move} onEnd={this.onEndCrop}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"cropped-image\" style={this.state.cropperImageStyles} onTouchStart={this.startTouch}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img style={this.state.croppedImageOverflowSyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Touch>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"opacity-image\" onClick={this.openThisImage}>\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"opacity-image\" style={this.state.imageStyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>\n\t\t\t\t\t\t\t\t\t\t\t<Linkify componentDecorator={(href, text, key) => {\n\t                        return (<Link href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">{text}</Link>);\n\t                   }} >{this.state.qrResult.split('\\n').map((a, i) => {return (<span key={\"row_\" + i}><span>{this.state.qrResult}</span><br/></span>)})}</Linkify>\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{!this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>Уточните область QR кода</div>}\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.getQrFromCrop} before={<Icon24Qr/>} size=\"xl\" style={{marginBottom: 8}}>Сканировать</Button>\n\t\t\t\t\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto}  before={<Icon24Camera/>} size=\"xl\" level=\"secondary\">Изменить изображение</File>\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t{!this.state.image && <Div>\n\t\t\t\t\t\t<p>Чтобы просканировать QR без камеры, выберите скриншот, где он изображен</p>\n\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto} before={<Icon24Camera/>} size=\"l\">Выбрать скриншот</File>\n\t\t\t\t\t</Div>}\n\t\t\t\t\t{this.state.activeSnack}\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}