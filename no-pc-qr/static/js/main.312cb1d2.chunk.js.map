{"version":3,"sources":["App.js","index.js"],"names":["App","props","changeSelectedPhoto","event","input","target","removeStopScrollWindow","setQrResult","files","fr","FileReader","onload","e","setImage","result","onerror","console","error","readAsDataURL","move","x","y","newCurrentX","state","currentPosCroppedX","shiftX","newCurrentY","currentPosCroppedY","shiftY","imgNode","document","getElementById","currentHeightCropper","offsetHeight","currentWidthCropper","offsetWidth","setState","croppedImageStyles","transform","croppedImageOverflowSyles","currentPosImageX","currentPosImageY","stopScrollWindow","log","body","classList","add","remove","onEndCrop","moveImage","imageStyles","onEndImageMove","scaleImagesMove","elem","originalEvent","isRight","value","match","newCurrentWidth","newCurrentHeight","cropperImageStyles","cropperStyles","width","height","onEndScaleImagesMove","getQrFromCrop","offsetCropX","getBoundingClientRect","offsetCropY","Math","floor","imageWidth","imageHeight","canvas","createElement","ctx","getContext","img","Image","drawImage","imageData","getImageData","clearRect","putImageData","getQRFromImage","src","toDataURL","image","res","qrResult","aciveSnack","currentCroppedX","currentCroppedY","snacks","qrDecodedSuccessfull","qrDecodedSnack","qrDecodedError","QrScanner","WORKER_PATH","snack","this","success","onClose","seActiveSnack","before","fill","scanImage","then","catch","activePanel","id","className","style","map","controllerType","onStart","onMove","onEnd","onTouchStart","startTouch","wordBreak","marginTop","marginBottom","componentDecorator","href","text","key","rel","split","a","onClick","size","onChange","level","backgroundImage","React","Component","connect","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.312cb1d2.chunk.js","sourcesContent":["import React from 'react';\n\nimport QrScanner from 'qr-scanner';\nimport connect from '@vkontakte/vk-connect';\n\nimport { Panel, PanelHeader, File, Div, View, Touch, Button, Link, Snackbar } from '@vkontakte/vkui';\n\nimport Linkify from 'react-linkify';\n\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Fullscreen from '@vkontakte/icons/dist/24/fullscreen';\nimport Icon24Qr from '@vkontakte/icons/dist/24/qr';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\timage: '',\n\t\t\tcropperStyles: {},\n\t\t\tcroppedImageStyles: {},\n\t\t\tcropperImageStyles: {},\n\t\t\tcroppedImageOverflowSyles: {},\n\t\t\tcurrentPosCroppedX: 0,\n\t\t\tcurrentPosCroppedY: 0,\n\t\t\tcurrentPosImageX: 0,\n\t\t\tcurrentPosImageY: 0,\n\t\t\tcurrentHeightCropper: 100,\n\t\t\tcurrentWidthCropper: 100,\n\t\t\tqrResult: \"\",\n\t\t\taciveSnack: null\n\t\t}\n\t\t\n\t\tthis.currentCroppedX = this.state.currentPosCroppedX;\n\t\tthis.currentCroppedY = this.state.currentCroppedY;\n\n\t\tthis.currentPosImageX = this.state.currentPosImageX;\n\t\tthis.currentPosImageY = this.state.currentPosImageY;\n\n\t\tthis.currentHeightCropper = this.state.currentHeightCropper;\n\t\tthis.currentWidthCropper = this.state.currentWidthCropper;\n\t\t\n\t\tthis.snacks = {\n\t\t\tqrDecodedSuccessfull: this.qrDecodedSnack(),\n\t\t\tqrDecodedError: this.qrDecodedSnack(false)\n\t\t}\n\n\t\tQrScanner.WORKER_PATH = 'libs/qr-scanner/qr-scanner-worker.min.js';\n\t}\n\n\tsetImage (src=\"\", readQr=true) {\n\t\tlet img = new Image();\n\t\timg.src = src;\n\t\timg.onload = () => {\n\t\t\tthis.setState({\n\t\t\t\timage: src,\n\t\t\t\timageWidth: img.width,\n\t\t\t\timageHeight: img.height\n\t\t\t});\n\t\t}\n\t}\n\n\tchangeSelectedPhoto = (event) => {\n\t\tlet input = event.target;\n\t\tthis.removeStopScrollWindow();\n\t\tthis.setQrResult(\"\");\n\n\t\tif (input && input.files && input.files[0]) {\n\t\t\tlet fr = new FileReader();\n\t\t\t\n\t\t\tfr.onload = (e) => {\n\t\t\t\tthis.setImage(e.target.result);\n\t\t\t}\n\n\t\t\tfr.onerror = () => {\n\t\t\t\tconsole.error('Файл не прочитан!');\n\t\t\t}\n\n\t\t\tfr.readAsDataURL(input.files[0]);\n\t\t}\n\t}\n\n\tseActiveSnack (snack) {\n\t\tthis.setState({\n\t\t\taciveSnack: snack\n\t\t});\n\t}\n\n\tqrDecodedSnack (success=true) {\n\t\treturn (<Snackbar onClose={() => this.seActiveSnack(null)} before={success ? <Icon24Done fill=\"#16C60C\"/> : <Icon24DoNotDisturb fill=\"#F44336\"/> }>{success ? \"Данные получены\" : \"QR не найден\"}</Snackbar>);\n\t}\n\n\tcomponentDidUpdate () {\n\t\tif (this.state.image) {\n\t\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\t\tif (imgNode && this.state.cropperStyles.height !== imgNode.offsetHeight) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcropperStyles: {\n\t\t\t\t\t\t...this.state.cropperStyles,\n\t\t\t\t\t\theight: imgNode.height\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\n\tmove = (e, x, y) => {\n\t\tlet newCurrentX = this.state.currentPosCroppedX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosCroppedY + e.shiftY;\n\t\t\n\t\tif (newCurrentX < 0) newCurrentX = 0;\n\t\tif (newCurrentY < 0) newCurrentY = 0;\n\t\t\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\n\t\tif (imgNode && newCurrentY + this.state.currentHeightCropper > imgNode.offsetHeight) {\n\t\t\t\tnewCurrentY = imgNode.offsetHeight - this.state.currentHeightCropper;\n\t\t}\n\t\t\n\t\tif (imgNode && newCurrentX + this.state.currentWidthCropper > imgNode.offsetWidth) {\n\t\t\t\tnewCurrentX = imgNode.offsetWidth - this.state.currentWidthCropper;\n\t\t}\n\n\n\t\tthis.currentPosCroppedX = newCurrentX;\n\t\tthis.currentPosCroppedY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${-(newCurrentX) + this.state.currentPosImageX}px) translateY(${-(newCurrentY ) + this.state.currentPosImageY}px)`\n\t\t\t}\n\t\t});\n\n\t}\n\n\tstopScrollWindow = () => {\n\t\tconsole.log('Stopping scroll..')\n\t\tdocument.body.classList.add(\"no-overflow\");\n\t}\n\n\tremoveStopScrollWindow = () => {\n\t\tdocument.body.classList.remove(\"no-overflow\");\n\t}\n\n\tonEndCrop = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosCroppedX: this.currentPosCroppedX,\n\t\t\tcurrentPosCroppedY: this.currentPosCroppedY\n\t\t});\n\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tmoveImage = (e) => {\n\t\tlet newCurrentX = this.state.currentPosImageX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosImageY + e.shiftY;\n\n\t\tthis.currentPosImageX = newCurrentX;\n\t\tthis.currentPosImageY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\timageStyles: {\n\t\t\t\t...this.state.imageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${newCurrentX - this.state.currentPosCroppedX}px) translateY(${newCurrentY - this.state.currentPosCroppedY}px)`\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndImageMove = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosImageX: this.currentPosImageX,\n\t\t\tcurrentPosImageY: this.currentPosImageY\n\t\t});\n\t}\t\n\n\tscaleImagesMove = (e) => {\n\t\tlet elem = e.originalEvent.target;\n\t\t\n\t\tlet isRight = !!elem.classList.value.match(\"right\");\n\t\tlet isLeft = !!elem.classList.value.match(\"left\")\n\n\t\tlet newCurrentWidth = this.state.currentWidthCropper + (isRight ? e.shiftX : -e.shiftX);\n\t\tlet newCurrentHeight = this.state.currentHeightCropper + (isRight ? e.shiftY : -e.shiftY);\n\t\t\n\t\tif (newCurrentWidth < newCurrentHeight) {\n\t\t\tnewCurrentHeight = newCurrentWidth;\n\t\t} else {\n\t\t\tnewCurrentWidth = newCurrentHeight;\n\t\t}\n\n\t\tthis.currentWidthCropper = newCurrentWidth;\n\t\tthis.currentHeightCropper = newCurrentHeight;\n\t\t\n\t\tthis.setState({\n\t\t\tcropperImageStyles: {\n\t\t\t\t...this.state.cropperStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t},\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonEndScaleImagesMove = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentWidthCropper: this.currentWidthCropper,\n\t\t\tcurrentHeightCropper: this.currentHeightCropper\n\t\t});\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tgetQrFromCrop = () => {\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\tlet cropNode = document.getElementById(\"crop\");\n\t\tlet cropCoords = cropNode.getBoundingClientRect();\n\t\t\n\t\tlet offsetCropX = this.state.currentPosCroppedX;\n\t\tlet offsetCropY =\tthis.state.currentPosCroppedY;\n\n\t\tlet x = Math.floor(offsetCropX * this.state.imageWidth / imgNode.offsetWidth);\n\t\tlet y = Math.floor(offsetCropY * this.state.imageHeight / imgNode.offsetHeight);\n\n\t\tlet height = Math.floor(this.state.currentHeightCropper * this.state.imageHeight / imgNode.offsetHeight);\n\t\tlet width = Math.floor(this.state.currentWidthCropper * this.state.imageWidth / imgNode.offsetWidth);\n\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\n\t\tcanvas.width = this.state.imageWidth;\n\t\tcanvas.height = this.state.imageHeight;\n\n\t\tlet ctx = canvas.getContext('2d');\n\t\n\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\n\t\t\tctx.drawImage(img, 0, 0);\n\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tcanvas.height = height;\n\t\t\tcanvas.width = width;\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t\timg = new Image();\n\t\t\t\n\t\t\timg.onload = () => {\n\t\t\t\tthis.getQRFromImage(img);\n\t\t\t}\n\n\t\t\timg.src = canvas.toDataURL();\n\t\t}\n\n\t\timg.src = this.state.image;\n\t}\n\n\tgetQRFromImage (image) {\n\t\tQrScanner.scanImage(image)\n    .then(res => {\n    \tthis.setQrResult(res);\n    \tthis.seActiveSnack(this.snacks.qrDecodedSuccessfull);\n    })\n    .catch(error => {\n    \tthis.setQrResult(\"\");\n    \tthis.seActiveSnack(this.snacks.qrDecodedError);\n    });\n\t}\n\n\tsetQrResult = (res) => {\n\t\tthis.setState({\n\t\t\tqrResult: res\n\t\t});\n\t}\n\n\trender () {\n\t\tlet controllers = [\"bottom-right\"];\n\n\t\treturn (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\" className=\"centering-panel\">\n\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\tQR без камеры\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t{this.state.image && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"wrap-cropper\">\n\t\t\t\t\t\t\t\t<div className=\"cropper\" style={this.state.cropperStyles}>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className=\"crop\" id=\"crop\" style={this.state.croppedImageStyles}>\n\t\t\t\t\t\t\t\t\t\t\t{controllers.map(controllerType => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<Touch onStart={this.stopScrollWindow} onMove={this.scaleImagesMove} onEnd={this.onEndScaleImagesMove}>{<div className={\"crop-controller \" + controllerType}></div>}</Touch>);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t\t<Touch onStart={this.stopScrollWindow} onMove={this.move} onEnd={this.onEndCrop}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"cropped-image\" style={this.state.cropperImageStyles} onTouchStart={this.startTouch}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img style={this.state.croppedImageOverflowSyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Touch>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"opacity-image\">\n\t\t\t\t\t\t\t\t\t\t<img id=\"opacity-image\" style={this.state.imageStyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t{this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>\n\t\t\t\t\t\t\t\t\t\t<Linkify componentDecorator={(href, text, key) => {\n                                                    return (<Link href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">{text}</Link>);\n                                               }} >{this.state.qrResult.split('\\n').map(a => {return (<span><span>{this.state.qrResult}</span><br/></span>)})}</Linkify>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t<Button onClick={this.getQrFromCrop} before={<Icon24Qr/>} size=\"xl\" style={{marginBottom: 8}}>Сканировать</Button>\n\t\t\t\t\t\t\t\t\t<File onChange={this.changeSelectedPhoto}  before={<Icon24Camera/>} size=\"xl\" level=\"secondary\">Изменить изображение</File>\n\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"wrapped-image\" style={{backgroundImage: `url(\"${this.state.image}\")`}}>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t{!this.state.image && <Div>\n\t\t\t\t\t\t<File onChange={this.changeSelectedPhoto} before={<Icon24Camera/>} size=\"l\">Выбрать скриншот</File>\n\t\t\t\t\t</Div>}\n\t\t\t\t\t{this.state.aciveSnack}\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}