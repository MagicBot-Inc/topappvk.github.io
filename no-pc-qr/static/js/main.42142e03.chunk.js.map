{"version":3,"sources":["App.js","index.js"],"names":["App","props","changeSelectedPhoto","event","input","target","removeStopScrollWindow","setState","state","defaultState","console","log","files","indexOf","type","setActiveSnack","snacks","errorImageLoading","fr","FileReader","onload","e","setImage","result","onerror","readAsDataURL","move","x","y","newCurrentX","currentPosCroppedX","shiftX","newCurrentY","currentPosCroppedY","shiftY","imgNode","document","getElementById","currentHeightCropper","offsetHeight","currentWidthCropper","offsetWidth","croppedImageStyles","transform","croppedImageOverflowSyles","currentPosImageX","currentPosImageY","stopScrollWindow","lastScrollPos","window","scrollY","wrapCropperStyles","overflow","body","classList","add","getElementsByTagName","remove","scrollTo","onEndCrop","moveImage","imageStyles","onEndImageMove","scaleImagesMove","elem","originalEvent","isRight","value","match","newCurrentWidth","newCurrentHeight","cropperImageStyles","cropperStyles","width","height","onEndScaleImagesMove","getQrFromCrop","offsetCropX","getBoundingClientRect","offsetCropY","Math","floor","imageWidth","imageHeight","canvas","createElement","ctx","getContext","img","Image","drawImage","imageData","getImageData","clearRect","putImageData","getQRFromImage","src","toDataURL","image","setQrResult","res","qrResult","openThisImage","connect","send","images","wrapCropperContentStyles","activeSnack","currentCroppedX","currentCroppedY","qrDecodedSuccessfull","qrDecodedSnack","qrDecodedError","errorImageLoadingSnack","eruda","init","QrScanner","WORKER_PATH","imgHeight","innerWidth","snack","this","success","onClose","before","fill","scanImage","then","catch","error","activePanel","id","theme","className","style","map","controllerType","onStart","onMove","onEnd","onTouchStart","startTouch","onClick","wordBreak","marginTop","marginBottom","componentDecorator","href","text","key","rel","split","a","size","accept","onChange","level","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.42142e03.chunk.js","sourcesContent":["import React from 'react';\n\nimport QrScanner from 'qr-scanner';\nimport connect from '@vkontakte/vk-connect';\n\nimport { Panel, PanelHeader, File, Div, View, Touch, Button, Link, Snackbar, Group } from '@vkontakte/vkui';\n\nimport Linkify from 'react-linkify';\nimport eruda from 'eruda';\n\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Fullscreen from '@vkontakte/icons/dist/24/fullscreen';\nimport Icon24Qr from '@vkontakte/icons/dist/24/qr';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.defaultState = {\n\t\t\timage: '',\n\t\t\tcropperStyles: {},\n\t\t\tcroppedImageStyles: {},\n\t\t\tcropperImageStyles: {},\n\t\t\tcroppedImageOverflowSyles: {},\n\t\t\tcurrentPosCroppedX: 0,\n\t\t\tcurrentPosCroppedY: 0,\n\t\t\tcurrentPosImageX: 0,\n\t\t\tcurrentPosImageY: 0,\n\t\t\tcurrentHeightCropper: 100,\n\t\t\tcurrentWidthCropper: 100,\n\t\t\twrapCropperStyles: {},\n\t\t\twrapCropperContentStyles: {},\n\t\t\tqrResult: \"\",\n\t\t}\n\n\t\tthis.state = {\n\t\t\t...this.defaultState,\n\t\t\tactiveSnack: null\n\t\t}\n\t\t\n\t\tthis.currentCroppedX = this.state.currentPosCroppedX;\n\t\tthis.currentCroppedY = this.state.currentCroppedY;\n\n\t\tthis.currentPosImageX = this.state.currentPosImageX;\n\t\tthis.currentPosImageY = this.state.currentPosImageY;\n\n\t\tthis.currentHeightCropper = this.state.currentHeightCropper;\n\t\tthis.currentWidthCropper = this.state.currentWidthCropper;\n\t\tthis.lastScrollPos = 0;\n\n\t\tthis.snacks = {\n\t\t\tqrDecodedSuccessfull: this.qrDecodedSnack(),\n\t\t\tqrDecodedError: this.qrDecodedSnack(false),\n\t\t\terrorImageLoading: this.errorImageLoadingSnack()\n\t\t}\n\n\t\teruda.init();\n\t\tQrScanner.WORKER_PATH = 'libs/qr-scanner/qr-scanner-worker.min.js';\n\t}\n\n\tsetImage (src=\"\", readQr=true) {\n\t\tlet img = new Image();\n\t\timg.src = src;\n\t\timg.onload = () => {\n\t\t\t\n\t\t\t\n\t\t\tlet imgHeight = img.height*window.innerWidth/img.width;;\n\n\n\t\t\tlet currentPosCroppedX = window.innerWidth / 2 - this.defaultState.currentWidthCropper / 2;\n\t\t\tlet currentPosCroppedY = (imgHeight / 2) - this.defaultState.currentHeightCropper / 2;\n\n\t\t\tthis.setState({\n\t\t\t\timage: src,\n\t\t\t\timageWidth: img.width,\n\t\t\t\timageHeight: img.height,\n\t\t\t\tcurrentPosCroppedX,\n\t\t\t\tcurrentPosCroppedY,\n\t\t\t\tcroppedImageStyles: {\n\t\t\t\t\ttransform: `translateX(${currentPosCroppedX}px) translateY(${currentPosCroppedY}px)`\n\t\t\t\t},\n\t\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t\ttransform: `translateX(${-(currentPosCroppedX)}px) translateY(${-(currentPosCroppedY)}px)`\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tchangeSelectedPhoto = (event) => {\n\t\tlet input = event.target;\n\t\tthis.removeStopScrollWindow();\n\t\t\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t...this.defaultState\n\t\t});\n\n\t\tconsole.log('change', input.files)\n\t\tif (input && input.files && input.files[0]) {\n\t\t\t\n\t\t\tif ([\"image/x-png\", \"image/png\", \"image/jpeg\", \"image/jpg\"].indexOf(input.files[0].type) === -1) {\n\t\t\t\tthis.setActiveSnack(this.snacks.errorImageLoading)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fr = new FileReader();\n\t\t\t\n\t\t\tfr.onload = (e) => {\n\t\t\t\tthis.setImage(e.target.result);\n\t\t\t}\n\n\t\t\tfr.onerror = () => {\n\t\t\t\tconsole.log('Не удалось')\n\t\t\t\tthis.setActiveSnack(this.snacks.errorImageLoading);\n\t\t\t}\n\n\t\t\tfr.readAsDataURL(input.files[0]);\n\t\t}\n\t}\n\n\tsetActiveSnack (snack) {\n\t\tthis.setState({\n\t\t\tactiveSnack: snack\n\t\t});\n\t}\n\n\tqrDecodedSnack (success=true) {\n\t\treturn (<Snackbar onClose={() => this.setActiveSnack(null)} before={success ? <Icon24Done fill=\"#16C60C\"/> : <Icon24DoNotDisturb fill=\"#F44336\"/> }>{success ? \"Данные получены\" : \"QR не найден\"}</Snackbar>);\n\t}\n\n\terrorImageLoadingSnack () {\n\t\treturn (<Snackbar onClose={() => {this.setActiveSnack(null)}} before={<Icon24DoNotDisturb fill=\"#F44336\"/>}>Не удалось загрузить изображение</Snackbar>)\n\t}\n\n\tcomponentDidUpdate () {\n\t\tif (this.state.image) {\n\t\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\t\tif (imgNode && this.state.cropperStyles.height !== imgNode.offsetHeight) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcropperStyles: {\n\t\t\t\t\t\t...this.state.cropperStyles,\n\t\t\t\t\t\theight: imgNode.height\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\n\tmove = (e, x, y) => {\n\t\tlet newCurrentX = this.state.currentPosCroppedX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosCroppedY + e.shiftY;\n\t\t\n\t\tif (newCurrentX < 0) newCurrentX = 0;\n\t\tif (newCurrentY < 0) newCurrentY = 0;\n\t\t\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\n\t\tif (imgNode && newCurrentY + this.state.currentHeightCropper > imgNode.offsetHeight) {\n\t\t\t\tnewCurrentY = imgNode.offsetHeight - this.state.currentHeightCropper;\n\t\t}\n\t\t\n\t\tif (imgNode && newCurrentX + this.state.currentWidthCropper > imgNode.offsetWidth) {\n\t\t\t\tnewCurrentX = imgNode.offsetWidth - this.state.currentWidthCropper;\n\t\t}\n\n\n\t\tthis.currentPosCroppedX = newCurrentX;\n\t\tthis.currentPosCroppedY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${-(newCurrentX) + this.state.currentPosImageX}px) translateY(${-(newCurrentY ) + this.state.currentPosImageY}px)`\n\t\t\t}\n\t\t});\n\n\t}\n\n\tstopScrollWindow = () => {\n\t\t\n\t\tthis.lastScrollPos = window.scrollY;\n\n\t\tthis.setState({\n\t\t\twrapCropperStyles: {\n\t\t\t\t...this.state.wrapCropperStyles,\n\t\t\t\toverflow: \"hidden\",\n\t\t\t\ttransform: `translateY(-${window.scrollY}px)`\n\t\t\t}\n\t\t});\n\t\t\n\t\tdocument.body.classList.add(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.add(\"no-overflow\");\n\t}\n\n\tremoveStopScrollWindow = () => {\n\t\tdocument.body.classList.remove(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.remove(\"no-overflow\");\n\n\t\twindow.scrollTo(0, this.lastScrollPos);\n\t\tthis.setState({\n\t\t\twrapCropperStyles: {\n\t\t\t\t...this.state.wrapCropperStyles,\n\t\t\t\toverflow: \"auto\",\n\t\t\t\ttransform: \"none\"\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndCrop = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosCroppedX: this.currentPosCroppedX,\n\t\t\tcurrentPosCroppedY: this.currentPosCroppedY\n\t\t});\n\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tmoveImage = (e) => {\n\t\tlet newCurrentX = this.state.currentPosImageX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosImageY + e.shiftY;\n\n\t\tthis.currentPosImageX = newCurrentX;\n\t\tthis.currentPosImageY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\timageStyles: {\n\t\t\t\t...this.state.imageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${newCurrentX - this.state.currentPosCroppedX}px) translateY(${newCurrentY - this.state.currentPosCroppedY}px)`\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndImageMove = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosImageX: this.currentPosImageX,\n\t\t\tcurrentPosImageY: this.currentPosImageY\n\t\t});\n\t}\t\n\n\tscaleImagesMove = (e) => {\n\t\tlet elem = e.originalEvent.target;\n\t\t\n\t\tlet isRight = !!elem.classList.value.match(\"right\");\n\t\tlet isLeft = !!elem.classList.value.match(\"left\")\n\n\t\tlet newCurrentWidth = this.state.currentWidthCropper + (isRight ? e.shiftX : -e.shiftX);\n\t\tlet newCurrentHeight = this.state.currentHeightCropper + (isRight ? e.shiftY : -e.shiftY);\n\t\t\n\t\tif (newCurrentWidth < newCurrentHeight) {\n\t\t\tnewCurrentHeight = newCurrentWidth;\n\t\t} else {\n\t\t\tnewCurrentWidth = newCurrentHeight;\n\t\t}\n\n\t\tthis.currentWidthCropper = newCurrentWidth;\n\t\tthis.currentHeightCropper = newCurrentHeight;\n\t\t\n\t\tthis.setState({\n\t\t\tcropperImageStyles: {\n\t\t\t\t...this.state.cropperStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t},\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonEndScaleImagesMove = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentWidthCropper: this.currentWidthCropper,\n\t\t\tcurrentHeightCropper: this.currentHeightCropper\n\t\t});\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tgetQrFromCrop = () => {\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\tlet cropNode = document.getElementById(\"crop\");\n\t\tlet cropCoords = cropNode.getBoundingClientRect();\n\t\t\n\t\tlet offsetCropX = this.state.currentPosCroppedX;\n\t\tlet offsetCropY =\tthis.state.currentPosCroppedY;\n\n\t\tlet x = Math.floor(offsetCropX * this.state.imageWidth / imgNode.offsetWidth);\n\t\tlet y = Math.floor(offsetCropY * this.state.imageHeight / imgNode.offsetHeight);\n\n\t\tlet height = Math.floor(this.state.currentHeightCropper * this.state.imageHeight / imgNode.offsetHeight);\n\t\tlet width = Math.floor(this.state.currentWidthCropper * this.state.imageWidth / imgNode.offsetWidth);\n\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\n\t\tcanvas.width = this.state.imageWidth;\n\t\tcanvas.height = this.state.imageHeight;\n\n\t\tlet ctx = canvas.getContext('2d');\n\t\n\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\n\t\t\tctx.drawImage(img, 0, 0);\n\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tcanvas.height = height;\n\t\t\tcanvas.width = width;\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t\timg = new Image();\n\t\t\t\n\t\t\timg.onload = () => {\n\t\t\t\tthis.getQRFromImage(img);\n\t\t\t}\n\n\t\t\timg.src = canvas.toDataURL();\n\t\t}\n\n\t\timg.src = this.state.image;\n\t}\n\n\tgetQRFromImage (image) {\n\t\tQrScanner.scanImage(image)\n    .then(res => {\n    \tthis.setQrResult(res);\n    \tthis.setActiveSnack(this.snacks.qrDecodedSuccessfull);\n    })\n    .catch(error => {\n    \tthis.setQrResult(\"\");\n    \tthis.setActiveSnack(this.snacks.qrDecodedError);\n    });\n\t}\n\n\tsetQrResult = (res) => {\n\t\tthis.setState({\n\t\t\tqrResult: res\n\t\t});\n\t}\n\t\n\topenThisImage = () => {\n\t\tconnect.send(\"VKWebAppShowImages\", {\n\t\t\timages: [this.state.image]\n\t\t});\n\t}\n\n\n\trender () {\n\t\tlet controllers = [\"bottom-right\"];\n\n\t\treturn (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\" theme=\"white\" className={!this.state.image && \"centering-panel\"}>\n\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\tQR без камеры\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t{this.state.image && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"wrap-cropper\" style={this.state.wrapCropperStyles}>\n\t\t\t\t\t\t\t\t<div className=\"wrap-cropper-content\" style={this.state.wrapCropperContentStyles}>\n\t\t\t\t\t\t\t\t\t<div className=\"cropper\" style={this.state.cropperStyles}>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"crop\" id=\"crop\" style={this.state.croppedImageStyles}>\n\t\t\t\t\t\t\t\t\t\t\t\t{controllers.map(controllerType => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<Touch onStart={this.stopScrollWindow} onMove={this.scaleImagesMove} onEnd={this.onEndScaleImagesMove}>{<div className={\"crop-controller \" + controllerType}></div>}</Touch>);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Touch onStart={this.stopScrollWindow} onMove={this.move} onEnd={this.onEndCrop}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"cropped-image\" style={this.state.cropperImageStyles} onTouchStart={this.startTouch}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img style={this.state.croppedImageOverflowSyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Touch>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"opacity-image\" onClick={this.openThisImage}>\n\t\t\t\t\t\t\t\t\t\t\t<img id=\"opacity-image\" style={this.state.imageStyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>\n\t\t\t\t\t\t\t\t\t\t\t<Linkify componentDecorator={(href, text, key) => {\n\t                        return (<Link href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">{text}</Link>);\n\t                   }} >{this.state.qrResult.split('\\n').map(a => {return (<span><span>{this.state.qrResult}</span><br/></span>)})}</Linkify>\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{!this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>Уточните область QR кода</div>}\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.getQrFromCrop} before={<Icon24Qr/>} size=\"xl\" style={{marginBottom: 8}}>Сканировать</Button>\n\t\t\t\t\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto}  before={<Icon24Camera/>} size=\"xl\" level=\"secondary\">Изменить изображение</File>\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t{!this.state.image && <Div>\n\t\t\t\t\t\t<p>Чтобы просканировать QR без камеры, выберите скриншот, где он изображен</p>\n\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto} before={<Icon24Camera/>} size=\"l\">Выбрать скриншот</File>\n\t\t\t\t\t</Div>}\n\t\t\t\t\t{this.state.activeSnack}\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}