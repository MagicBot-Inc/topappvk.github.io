{"version":3,"sources":["App.js","index.js"],"names":["App","props","changeSelectedPhoto","event","input","target","removeStopScrollWindow","setQrResult","files","fr","FileReader","onload","e","setImage","result","onerror","console","error","readAsDataURL","move","x","y","newCurrentX","state","currentPosCroppedX","shiftX","newCurrentY","currentPosCroppedY","shiftY","imgNode","document","getElementById","currentHeightCropper","offsetHeight","currentWidthCropper","offsetWidth","setState","croppedImageStyles","transform","croppedImageOverflowSyles","currentPosImageX","currentPosImageY","stopScrollWindow","log","body","classList","add","getElementsByTagName","remove","onEndCrop","moveImage","imageStyles","onEndImageMove","scaleImagesMove","elem","originalEvent","isRight","value","match","newCurrentWidth","newCurrentHeight","cropperImageStyles","cropperStyles","width","height","onEndScaleImagesMove","getQrFromCrop","offsetCropX","getBoundingClientRect","offsetCropY","Math","floor","imageWidth","imageHeight","canvas","createElement","ctx","getContext","img","Image","drawImage","imageData","getImageData","clearRect","putImageData","getQRFromImage","src","toDataURL","image","res","qrResult","aciveSnack","currentCroppedX","currentCroppedY","snacks","qrDecodedSuccessfull","qrDecodedSnack","qrDecodedError","QrScanner","WORKER_PATH","snack","this","success","onClose","seActiveSnack","before","fill","scanImage","then","catch","activePanel","id","theme","className","style","map","controllerType","onStart","onMove","onEnd","onTouchStart","startTouch","wordBreak","marginTop","marginBottom","componentDecorator","href","text","key","rel","split","a","onClick","size","accept","onChange","level","React","Component","connect","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2613e74.chunk.js","sourcesContent":["import React from 'react';\n\nimport QrScanner from 'qr-scanner';\nimport connect from '@vkontakte/vk-connect';\n\nimport { Panel, PanelHeader, File, Div, View, Touch, Button, Link, Snackbar, Group } from '@vkontakte/vkui';\n\nimport Linkify from 'react-linkify';\n\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Fullscreen from '@vkontakte/icons/dist/24/fullscreen';\nimport Icon24Qr from '@vkontakte/icons/dist/24/qr';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\timage: '',\n\t\t\tcropperStyles: {},\n\t\t\tcroppedImageStyles: {},\n\t\t\tcropperImageStyles: {},\n\t\t\tcroppedImageOverflowSyles: {},\n\t\t\tcurrentPosCroppedX: 0,\n\t\t\tcurrentPosCroppedY: 0,\n\t\t\tcurrentPosImageX: 0,\n\t\t\tcurrentPosImageY: 0,\n\t\t\tcurrentHeightCropper: 100,\n\t\t\tcurrentWidthCropper: 100,\n\t\t\tqrResult: \"\",\n\t\t\taciveSnack: null\n\t\t}\n\t\t\n\t\tthis.currentCroppedX = this.state.currentPosCroppedX;\n\t\tthis.currentCroppedY = this.state.currentCroppedY;\n\n\t\tthis.currentPosImageX = this.state.currentPosImageX;\n\t\tthis.currentPosImageY = this.state.currentPosImageY;\n\n\t\tthis.currentHeightCropper = this.state.currentHeightCropper;\n\t\tthis.currentWidthCropper = this.state.currentWidthCropper;\n\t\t\n\t\tthis.snacks = {\n\t\t\tqrDecodedSuccessfull: this.qrDecodedSnack(),\n\t\t\tqrDecodedError: this.qrDecodedSnack(false)\n\t\t}\n\n\t\tQrScanner.WORKER_PATH = 'libs/qr-scanner/qr-scanner-worker.min.js';\n\t}\n\n\tsetImage (src=\"\", readQr=true) {\n\t\tlet img = new Image();\n\t\timg.src = src;\n\t\timg.onload = () => {\n\t\t\tthis.setState({\n\t\t\t\timage: src,\n\t\t\t\timageWidth: img.width,\n\t\t\t\timageHeight: img.height\n\t\t\t});\n\t\t}\n\t}\n\n\tchangeSelectedPhoto = (event) => {\n\t\tlet input = event.target;\n\t\tthis.removeStopScrollWindow();\n\t\tthis.setQrResult(\"\");\n\n\t\tif (input && input.files && input.files[0]) {\n\t\t\tlet fr = new FileReader();\n\t\t\t\n\t\t\tfr.onload = (e) => {\n\t\t\t\tthis.setImage(e.target.result);\n\t\t\t}\n\n\t\t\tfr.onerror = () => {\n\t\t\t\tconsole.error('Файл не прочитан!');\n\t\t\t}\n\n\t\t\tfr.readAsDataURL(input.files[0]);\n\t\t}\n\t}\n\n\tseActiveSnack (snack) {\n\t\tthis.setState({\n\t\t\taciveSnack: snack\n\t\t});\n\t}\n\n\tqrDecodedSnack (success=true) {\n\t\treturn (<Snackbar onClose={() => this.seActiveSnack(null)} before={success ? <Icon24Done fill=\"#16C60C\"/> : <Icon24DoNotDisturb fill=\"#F44336\"/> }>{success ? \"Данные получены\" : \"QR не найден\"}</Snackbar>);\n\t}\n\n\tcomponentDidUpdate () {\n\t\tif (this.state.image) {\n\t\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\t\tif (imgNode && this.state.cropperStyles.height !== imgNode.offsetHeight) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcropperStyles: {\n\t\t\t\t\t\t...this.state.cropperStyles,\n\t\t\t\t\t\theight: imgNode.height\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\n\tmove = (e, x, y) => {\n\t\tlet newCurrentX = this.state.currentPosCroppedX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosCroppedY + e.shiftY;\n\t\t\n\t\tif (newCurrentX < 0) newCurrentX = 0;\n\t\tif (newCurrentY < 0) newCurrentY = 0;\n\t\t\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\n\t\tif (imgNode && newCurrentY + this.state.currentHeightCropper > imgNode.offsetHeight) {\n\t\t\t\tnewCurrentY = imgNode.offsetHeight - this.state.currentHeightCropper;\n\t\t}\n\t\t\n\t\tif (imgNode && newCurrentX + this.state.currentWidthCropper > imgNode.offsetWidth) {\n\t\t\t\tnewCurrentX = imgNode.offsetWidth - this.state.currentWidthCropper;\n\t\t}\n\n\n\t\tthis.currentPosCroppedX = newCurrentX;\n\t\tthis.currentPosCroppedY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${-(newCurrentX) + this.state.currentPosImageX}px) translateY(${-(newCurrentY ) + this.state.currentPosImageY}px)`\n\t\t\t}\n\t\t});\n\n\t}\n\n\tstopScrollWindow = () => {\n\t\tconsole.log('Stopping scroll..')\n\t\tdocument.body.classList.add(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.add(\"no-overflow\");\n\t}\n\n\tremoveStopScrollWindow = () => {\n\t\tdocument.body.classList.remove(\"no-overflow\");\n\t\tdocument.getElementsByTagName(\"html\")[0].classList.remove(\"no-overflow\");\n\t}\n\n\tonEndCrop = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosCroppedX: this.currentPosCroppedX,\n\t\t\tcurrentPosCroppedY: this.currentPosCroppedY\n\t\t});\n\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tmoveImage = (e) => {\n\t\tlet newCurrentX = this.state.currentPosImageX + e.shiftX;\n\t\tlet newCurrentY = this.state.currentPosImageY + e.shiftY;\n\n\t\tthis.currentPosImageX = newCurrentX;\n\t\tthis.currentPosImageY = newCurrentY;\n\n\t\tthis.setState({\n\t\t\timageStyles: {\n\t\t\t\t...this.state.imageStyles,\n\t\t\t\ttransform: `translateX(${newCurrentX}px) translateY(${newCurrentY}px)`\n\t\t\t},\n\t\t\tcroppedImageOverflowSyles: {\n\t\t\t\t...this.state.croppedImageOverflowSyles,\n\t\t\t\ttransform: `translateX(${newCurrentX - this.state.currentPosCroppedX}px) translateY(${newCurrentY - this.state.currentPosCroppedY}px)`\n\t\t\t}\n\t\t});\n\t}\n\n\tonEndImageMove = () => {\n\t\tthis.setState({\n\t\t\tcurrentPosImageX: this.currentPosImageX,\n\t\t\tcurrentPosImageY: this.currentPosImageY\n\t\t});\n\t}\t\n\n\tscaleImagesMove = (e) => {\n\t\tlet elem = e.originalEvent.target;\n\t\t\n\t\tlet isRight = !!elem.classList.value.match(\"right\");\n\t\tlet isLeft = !!elem.classList.value.match(\"left\")\n\n\t\tlet newCurrentWidth = this.state.currentWidthCropper + (isRight ? e.shiftX : -e.shiftX);\n\t\tlet newCurrentHeight = this.state.currentHeightCropper + (isRight ? e.shiftY : -e.shiftY);\n\t\t\n\t\tif (newCurrentWidth < newCurrentHeight) {\n\t\t\tnewCurrentHeight = newCurrentWidth;\n\t\t} else {\n\t\t\tnewCurrentWidth = newCurrentHeight;\n\t\t}\n\n\t\tthis.currentWidthCropper = newCurrentWidth;\n\t\tthis.currentHeightCropper = newCurrentHeight;\n\t\t\n\t\tthis.setState({\n\t\t\tcropperImageStyles: {\n\t\t\t\t...this.state.cropperStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t},\n\t\t\tcroppedImageStyles: {\n\t\t\t\t...this.state.croppedImageStyles,\n\t\t\t\twidth: newCurrentWidth,\n\t\t\t\theight: newCurrentHeight\n\t\t\t}\n\t\t});\n\n\t}\n\n\tonEndScaleImagesMove = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentWidthCropper: this.currentWidthCropper,\n\t\t\tcurrentHeightCropper: this.currentHeightCropper\n\t\t});\n\t\tthis.removeStopScrollWindow();\n\t}\n\n\tgetQrFromCrop = () => {\n\t\tlet imgNode = document.getElementById(\"opacity-image\");\n\t\tlet cropNode = document.getElementById(\"crop\");\n\t\tlet cropCoords = cropNode.getBoundingClientRect();\n\t\t\n\t\tlet offsetCropX = this.state.currentPosCroppedX;\n\t\tlet offsetCropY =\tthis.state.currentPosCroppedY;\n\n\t\tlet x = Math.floor(offsetCropX * this.state.imageWidth / imgNode.offsetWidth);\n\t\tlet y = Math.floor(offsetCropY * this.state.imageHeight / imgNode.offsetHeight);\n\n\t\tlet height = Math.floor(this.state.currentHeightCropper * this.state.imageHeight / imgNode.offsetHeight);\n\t\tlet width = Math.floor(this.state.currentWidthCropper * this.state.imageWidth / imgNode.offsetWidth);\n\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\n\t\tcanvas.width = this.state.imageWidth;\n\t\tcanvas.height = this.state.imageHeight;\n\n\t\tlet ctx = canvas.getContext('2d');\n\t\n\n\t\tlet img = new Image();\n\t\timg.onload = () => {\n\n\t\t\tctx.drawImage(img, 0, 0);\n\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tcanvas.height = height;\n\t\t\tcanvas.width = width;\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t\timg = new Image();\n\t\t\t\n\t\t\timg.onload = () => {\n\t\t\t\tthis.getQRFromImage(img);\n\t\t\t}\n\n\t\t\timg.src = canvas.toDataURL();\n\t\t}\n\n\t\timg.src = this.state.image;\n\t}\n\n\tgetQRFromImage (image) {\n\t\tQrScanner.scanImage(image)\n    .then(res => {\n    \tthis.setQrResult(res);\n    \tthis.seActiveSnack(this.snacks.qrDecodedSuccessfull);\n    })\n    .catch(error => {\n    \tthis.setQrResult(\"\");\n    \tthis.seActiveSnack(this.snacks.qrDecodedError);\n    });\n\t}\n\n\tsetQrResult = (res) => {\n\t\tthis.setState({\n\t\t\tqrResult: res\n\t\t});\n\t}\n\n\trender () {\n\t\tlet controllers = [\"bottom-right\"];\n\n\t\treturn (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\" theme=\"white\" className={!this.state.image && \"centering-panel\"}>\n\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\tQR без камеры\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t{this.state.image && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"wrap-cropper\">\n\t\t\t\t\t\t\t\t<div className=\"cropper\" style={this.state.cropperStyles}>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className=\"crop\" id=\"crop\" style={this.state.croppedImageStyles}>\n\t\t\t\t\t\t\t\t\t\t\t{controllers.map(controllerType => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<Touch onStart={this.stopScrollWindow} onMove={this.scaleImagesMove} onEnd={this.onEndScaleImagesMove}>{<div className={\"crop-controller \" + controllerType}></div>}</Touch>);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t\t\t<Touch onStart={this.stopScrollWindow} onMove={this.move} onEnd={this.onEndCrop}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"cropped-image\" style={this.state.cropperImageStyles} onTouchStart={this.startTouch}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img style={this.state.croppedImageOverflowSyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Touch>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"opacity-image\">\n\t\t\t\t\t\t\t\t\t\t<img id=\"opacity-image\" style={this.state.imageStyles} src={this.state.image}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t{this.state.qrResult && <div style={{wordBreak: 'break-all', marginTop: 8, marginBottom: 24}}>\n\t\t\t\t\t\t\t\t\t\t<Linkify componentDecorator={(href, text, key) => {\n                                                    return (<Link href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">{text}</Link>);\n                                               }} >{this.state.qrResult.split('\\n').map(a => {return (<span><span>{this.state.qrResult}</span><br/></span>)})}</Linkify>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t<Button onClick={this.getQrFromCrop} before={<Icon24Qr/>} size=\"xl\" style={{marginBottom: 8}}>Сканировать</Button>\n\t\t\t\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto}  before={<Icon24Camera/>} size=\"xl\" level=\"secondary\">Изменить изображение</File>\n\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t{!this.state.image && <Div>\n\t\t\t\t\t\t<File accept=\"image/x-png,image/jpeg\" onChange={this.changeSelectedPhoto} before={<Icon24Camera/>} size=\"l\">Выбрать скриншот</File>\n\t\t\t\t\t</Div>}\n\t\t\t\t\t{this.state.aciveSnack}\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}