{"version":3,"sources":["components/standardSearchHeader.js","panels/getCities.js","panels/gettingAuth.js","panels/notFound.js","panels/hello.js","components/standardRequestAccess.js","panels/getEmail.js","panels/getPhoneNumber.js","panels/joinGroup.js","panels/allowMessagesFromGroup.js","panels/routeDialog.js","panels/getAppVersion.js","panels/readQRCode.js","panels/downloadFile.js","App.js","index.js"],"names":["onChange","onClose","closeIcon","key","title","setSearch","hashParams","window","location","search","isDesktopWebPlatfrom","URLSearchParams","get","console","log","left","onClick","e","bridge","send","history","back","className","GetCitiesPanel","props","selectCountry","countryId","activeHash","sendResponse","state","countries","find","c","id","setState","selectedCountryId","loadCities","selectCity","city","a","clearCities","cities","countryName","changeSearchQuery","q","target","value","String","toLocaleLowerCase","loadedCountries","loadedCities","this","userToken","length","loadCountries","vkApi","need_all","count","items","country_id","header","mode","aside","map","size","renderCities","filter","match","country","React","Component","onRequestToken","centered","icon","action","type","renderAction","before","requests","actionText","botName","botPhoto","src","GetEmailPanel","getEmail","then","res","email","GetPhoneNumberPanel","getPhoneNumber","phone_number","JoinGroupPanel","joinGroup","Number","AllowMessagesFromGroupPanel","subscribeGroupMessages","RouteDialogPanel","routeDialog","href","GetAppVersionPanel","ReadQRCodePanel","supports","catch","sendError","error_code","DownloadFilePanel","url","file_url","filename","file_name","App","response","close","appPayload","method","hash","replace","error","success","botId","queryParams","Date","getTime","message","error_message","requestToken","token","access_token","activePanel","makeApiCall","params","queryString","indexOf","alreadyAuth","popout","wasClosed","subscribe","reload","ReactDOM","render","document","getElementById","eruda","onerror","errorMsg","lineNumber","columnNumber","textAoutput","stack","navigator","userAgent","body","innerHTML","info"],"mappings":"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","file":"static/js/main.f133f06d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n  PanelHeader,\r\n  Search,\r\n  PanelHeaderButton\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\n\r\nimport './css/standardSearchHeader.css';\r\n\r\nexport default ({ onChange, onClose, closeIcon, key, title, setSearch}) => {\r\n  let hashParams = window.location.search\r\n  hashParams = new URLSearchParams(hashParams);\r\n\r\n  const isDesktopWebPlatfrom = hashParams.get('vk_platform') === 'desktop_web';\r\n  console.log(hashParams.get('vk_platform'))\r\n  return (<PanelHeader key={key} left={<PanelHeaderButton onClick={(e) => {\r\n    if (onClose) {\r\n      onClose(e)\r\n    } else {\r\n\r\n      bridge.send(\"VKWebAppClose\", {\r\n        \"status\": \"success\", \r\n        \"payload\": {}\r\n      });\r\n\r\n      window.history.back();\r\n    }\r\n  }}>{closeIcon ? closeIcon : <Icon24Cancel/>}</PanelHeaderButton>}>\r\n    {setSearch ? <Search onChange={onChange} className={!isDesktopWebPlatfrom ? \"margins\" : \"\"}/> : title ? title : \"ChatBot Tools\"}\r\n  </PanelHeader>);\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Search,\r\n  PanelSpinner,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  List,\r\n  Cell,\r\n  Link\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetCitiesPanel extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      countries: [],\r\n      cities: [],\r\n      selectedCountryId: 0,\r\n      loadedCountries: false,\r\n      loadedCities: false,\r\n      countryName: ''\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {userToken} = this.props;\r\n\r\n    if (!this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n  }\r\n\r\n  async loadCountries (q=\"\") {\r\n    \r\n    this.setState({\r\n      loadCountries: false\r\n    });\r\n\r\n    let countries = await this.props.vkApi('database.getCountries', {\r\n      need_all: 1,\r\n      q,\r\n      count: 1000\r\n    });\r\n\r\n    this.setState({\r\n      loadedCountries: true,\r\n      countries: countries.items\r\n    })\r\n  }\r\n\r\n  async loadCities (q=\"\") {\r\n    this.setState({\r\n      loadedCities: false\r\n    });\r\n\r\n    let cities = await this.props.vkApi('database.getCities', {\r\n      country_id: this.state.selectedCountryId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedCities: true,\r\n      cities: cities.items\r\n    })\r\n  }\r\n\r\n  selectCountry = (countryId) => {\r\n    const {activeHash} = this.props;\r\n    if (activeHash === \"selectCountry\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": countryId,\r\n        \"country_title\": this.state.countries.find(c => c.id === countryId).title\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedCountryId: countryId\r\n      }, () => {\r\n        this.loadCities();\r\n      });\r\n    } \r\n  }\r\n\r\n  selectCity = async (city) => {\r\n    this.props.sendResponse({\r\n      \"city_id\": city.id,\r\n      \"city_title\": city.title,\r\n      \"country_id\": this.state.selectedCountryId,\r\n      \"country_title\": this.state.countries.find(c => c.id === this.state.selectedCountryId).title\r\n    });\r\n\r\n    this.clearCities();\r\n  } \r\n\r\n  clearCities = () => {\r\n    this.setState({\r\n      cities: [],\r\n      selectedCountryId: 0,\r\n      countryName: ''\r\n    })\r\n  }\r\n\r\n  renderCities () {\r\n    const {cities, loadedCities} = this.state;\r\n    return (\r\n      !cities.length && !loadedCities ? <PanelSpinner size=\"l\"/> :\r\n      !cities.length ? <Div>Произошла неизвестная ошибка</Div> :\r\n      <div>\r\n        <Group header={<Header mode=\"secondary\" aside={<Link onClick={this.clearCities}>Изменить страну</Link>}>Выберите город</Header>}>\r\n          <List>\r\n            {cities.map(city => (\r\n              <Cell onClick={() => this.selectCity(city)} key={\"city\" + city.id}>\r\n                {city.title}\r\n              </Cell>\r\n            ))}\r\n          </List>\r\n        </Group>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  changeSearchQuery = (e) => {\r\n    let q = e.target.value;\r\n    if (this.state.selectedCountryId) {\r\n      this.loadCities(q);\r\n    } else {\r\n      this.setState({\r\n        countryName: String(q).toLocaleLowerCase()\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {countries, loadedCountries, countryName, selectedCountryId} = this.state;\r\n    return (\r\n      <Panel id={this.props.id}>\r\n        <StandardSearchHeader setSearch={true} key={selectedCountryId ? \"country\" : \"city\"} onChange={this.changeSearchQuery}/>\r\n        {!countries.length && !loadedCountries ? <PanelSpinner size=\"l\"/> : \r\n        !countries.length ? <Div>Произошла неизвестная ошибка</Div> : \r\n          !selectedCountryId ? <Group header={<Header mode=\"secondary\">Выберите страну</Header>}>\r\n            <List>\r\n              {countries.filter(c => {\r\n                return String(c.title).toLocaleLowerCase().match(countryName)\r\n              }).map(country => (\r\n                <Cell onClick={() => this.selectCountry(country.id)} key={\"country\" + country.id}>\r\n                  {country.title}\r\n                </Cell>\r\n              ))}\r\n            </List>\r\n          </Group> : this.renderCities()\r\n        }\r\n      </Panel>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div,\r\n  Button,\r\n  Card,\r\n  CardGrid,\r\n  Placeholder\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport Icon56HideOutline from '@vkontakte/icons/dist/56/hide_outline';\r\n\r\nconst renderAction = (type=\"\") => {\r\n  switch (type) {\r\n    case 'selectCity':\r\n      return 'выбрать город';\r\n    default: \r\n      return 'пользоваться сервисом';\r\n  }\r\n}\r\nexport default ({onRequestToken, id, activeHash}) => (\r\n  <Panel id={id} centered header={false}>\r\n    <StandardSearchHeader title=\"ChatBot Tools\"/>\r\n    <Placeholder\r\n      icon={<Icon56HideOutline/>}\r\n      action={<Button size=\"xl\" onClick={onRequestToken}>Разрешить</Button>}\r\n    >Чтобы {renderAction(activeHash)}, вам нужно разрешить доступ к общедоступной информации о Вас.</Placeholder>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default ({id}) => (\r\n  <Panel id={id} centered header={false}>\r\n    <StandardSearchHeader title=\"ChatBot Tools\"/>\r\n    <Div className=\"align-center\">\r\n      Страница не найдена. <br/>Проверьте название метода.\r\n    </Div>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div,\r\n  Link,\r\n  Button,\r\n  Placeholder\r\n} from '@vkontakte/vkui'\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Icon24Services from '@vkontakte/icons/dist/24/services';\r\nimport Icon56MessageReadOutline from '@vkontakte/icons/dist/56/message_read_outline';\r\n\r\nexport default ({id}) => (\r\n  <Panel id={id} centered>\r\n    <StandardSearchHeader title=\"Привет!\"/>\r\n    <Placeholder\r\n      icon={<Icon56MessageReadOutline/>}\r\n      header=\"ChatBot Tools\"\r\n      action={<Button size=\"xl\" onClick={() => {\r\n          bridge.send(\"VKWebAppAddToCommunity\", {});\r\n        }} before={<Icon24Services/>}>Установить в сообщество</Button>}\r\n    >Это новые возможности для Ваших <br/> чат-ботов ВКонтакте.</Placeholder>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  CardGrid,\r\n  Placeholder,\r\n  Avatar,\r\n  Button\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon56LockOutline from '@vkontakte/icons/dist/56/lock_outline';\r\n\r\nexport default ({hashParams, requests, onClick, actionText, action, icon}) => {\r\n  let botName = hashParams.get('bot_name') || \"Чат-бот\"\r\n  let botPhoto = hashParams.get('bot_photo') || \"\";\r\n\r\n  return (\r\n  <CardGrid>\r\n    <Placeholder\r\n      icon={botPhoto ? <Avatar size={82} src={botPhoto}/> : icon ? icon : <Icon56LockOutline/>}\r\n      header={botName}\r\n      action={action ? action : <Button size=\"xl\" onClick={onClick}>{actionText ? actionText : \"Разрешить\"}</Button>}\r\n    >{requests}</Placeholder>\r\n  </CardGrid>);\r\n};","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetEmailPanel extends React.Component {\r\n  \r\n  getEmail = () => {\r\n    bridge.send(\"VKWebAppGetEmail\", {}).then(res => {\r\n      this.props.sendResponse({\r\n        email: res.email\r\n      })\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        <StandardRequestAccess \r\n          onClick={this.getEmail} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает доступ к Вашему Email адресу\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetPhoneNumberPanel extends React.Component {\r\n  \r\n  getPhoneNumber = () => {\r\n    bridge.send(\"VKWebAppGetPhoneNumber\", {}).then(res => {\r\n      this.props.sendResponse({\r\n        phone_number: res.phone_number\r\n      });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        <StandardRequestAccess \r\n          onClick={this.getPhoneNumber} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает доступ к Вашему номеру телефона\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class JoinGroupPanel extends React.Component {\r\n  \r\n  joinGroup = () => {\r\n    let {hashParams} = this.props\r\n    bridge.send(\"VKWebAppJoinGroup\", {\r\n      \"group_id\": Number(hashParams.get('group_id'))\r\n    }).then(res => {\r\n      this.props.sendResponse(res);\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        <StandardRequestAccess \r\n          onClick={this.joinGroup} \r\n          hashParams={hashParams} \r\n          requests=\"Предлагает вступить в сообщество\"\r\n          actionText=\"Вступить\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class AllowMessagesFromGroupPanel extends React.Component {\r\n  \r\n  subscribeGroupMessages = () => {\r\n    let {hashParams} = this.props\r\n    bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\r\n      \"group_id\": Number(hashParams.get('group_id')),\r\n      \"key\": hashParams.get('key')\r\n    }).then(res => {\r\n      this.props.sendResponse(res);\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        <StandardRequestAccess \r\n          onClick={this.subscribeGroupMessages} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает подписку на сообщения сообщества\"\r\n          actionText=\"Подписаться\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Link,\r\n  Button,\r\n  Gradient\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Icon56MessageReadOutline from '@vkontakte/icons/dist/56/message_read_outline';\r\n\r\nexport default class RouteDialogPanel extends React.Component {\r\n  \r\n  routeDialog = () => {\r\n    let res = {}\r\n    \r\n    for (let [key, value] of this.props.hashParams) {\r\n      res[key] = value\r\n    }\r\n    this.props.sendResponse(res)\r\n    return true;\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        <Gradient>\r\n          <StandardRequestAccess \r\n            hashParams={hashParams} \r\n            requests=\"Перенаправление к диалогу с чат-ботом\"\r\n            icon={<Icon56MessageReadOutline/>}\r\n            action={<Link href={'https://vk.com/im?sel=-' + hashParams.get('bot_id')} onClick={this.routeDialog} target=\"_blank\"><Button size=\"xl\">Быстрый диалог</Button></Link>}\r\n          />\r\n        </Gradient>\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetAppVersionPanel extends React.Component {\r\n  \r\n  componentWillMount () {\r\n    bridge.send(\"VKWebAppGetClientVersion\", {}).then(res => {\r\n      this.props.sendResponse(res)\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        Получаем версию ...\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class ReadQRCodePanel extends React.Component {\r\n  \r\n  componentWillMount () {\r\n    if (bridge.supports(\"VKWebAppOpenCodeReader\")) {\r\n      bridge.send(\"VKWebAppOpenCodeReader\", {}).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"QR не удалось прочитать\", e)\r\n      })\r\n    } else {\r\n      this.props.sendError(\"Чтение QR не поддерживается\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        Открываем сканер ...\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class DownloadFilePanel extends React.Component {\r\n  \r\n  componentWillMount () {\r\n    let {hashParams} = this.props;\r\n    if (bridge.supports(\"VKWebAppDownloadFile\")) {\r\n      bridge.send(\"VKWebAppDownloadFile\", {\r\n        url: hashParams.file_url,\r\n        filename: hashParams.file_name\r\n      }).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось скачать файл\", {\r\n          ...e,\r\n          error_code: \"download_file_error\"\r\n        })\r\n      })\r\n    } else {\r\n      this.props.sendError(\"Скачиание файла не доступно на этом устройстве\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader/>\r\n        Файл скачивается ...\r\n      </Panel>\r\n    );\r\n  }\r\n}","import 'url-search-params-polyfill';\n\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport {\n\tView,\n\tScreenSpinner,\n\tPanelSpinner,\n\tPanel\n} from '@vkontakte/vkui';\n\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport GetCitiesPanel from './panels/getCities';\nimport GettingAuthPanel from './panels/gettingAuth';\nimport NotFoundPanel from './panels/notFound';\nimport HelloPanel from './panels/hello';\nimport GetEmailPanel from './panels/getEmail';\nimport GetPhoneNumberPanel from './panels/getPhoneNumber';\nimport JoinGroupPanel from './panels/joinGroup';\nimport AllowMessagesFromGroupPanel from './panels/allowMessagesFromGroup';\nimport RouteDialogPanel from './panels/routeDialog';\nimport GetAppVersionPanel from './panels/getAppVersion';\nimport ReadQRCodePanel from './panels/readQRCode';\nimport DownloadFilePanel from './panels/downloadFile';\n\nimport './css/main.css';\n\nexport const APP_ID = 7388296;\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.queryString = window.location.search;\n\n\t\tthis.queryParams = new URLSearchParams(this.queryString);\n\t\tconsole.log(this.queryString, this.queryParams)\n\n\t\tlet supportsHashes = [\n\t\t\t'selectCity', \n\t\t\t'selectCountry', \n\t\t\t'getEmail', \n\t\t\t'getPhoneNumber',\n\t\t\t'joinGroup',\n\t\t\t'allowMessagesFromGroup',\n\t\t\t'routeDialog',\n\t\t\t'getAppVersion',\n\t\t\t'readQRCode',\n\t\t\t'downloadFile'\n\t\t];\n\n\t\tlet hashParams = window.location.hash.replace(/^#/, '?');\n\t\tconsole.log(hashParams)\n\t\tlet activeHash = '';\n\n\n\t\tif (hashParams.replace('?', '').match(/^(\\d+)/)) {\n\t\t\thashParams = `?method=routeDialog&bot_id=${hashParams.replace('?', '')}`;\n\t\t}\n\n\t\tconsole.log(hashParams, 'hashParams 2')\n\t\thashParams = new URLSearchParams(hashParams);\n\t\t\n\t\tthis.hashParams = hashParams;\n\n\t\tactiveHash = hashParams.get('method');\n\t\tconsole.log(activeHash)\n\t\tif (supportsHashes.indexOf(activeHash) === -1) {\n\t\t\tif (activeHash && activeHash.length) {\n\t\t\t\tactiveHash = 'notFound';\n\t\t\t} else {\n\t\t\t\tactiveHash = 'hello';\n\t\t\t}\n\t\t}\n\n\t\tlet activePanel = 'gettingAuth';\n\t\tlet alreadyAuth = this.queryParams.get('vk_access_token_settings') === \"status\";\n\n\t\tif (alreadyAuth || (['selectCountry', 'selectCity'].indexOf(activeHash) === -1)) {\n\t\t\tactivePanel = activeHash;\n\t\t}\n\n\t\tconsole.log(activePanel, activeHash, alreadyAuth)\n\n\t\tthis.state = {\n\t\t\tuserToken: '',\n\t\t\tactivePanel: activePanel,\n\t\t\tactiveHash: activeHash,\n\t\t\tpopout: null,\n\t\t\thashParams\n\t\t}\n\n\t\tif (alreadyAuth) {\n\t\t\tthis.requestToken();\n\t\t}\t\n\n\t\tthis.wasClosed = false;\n\n\t\tbridge.subscribe((e) => {\n\t\t\tif (e.type === \"VKWebAppLocationChanged\" || (e.type === \"VKWebAppViewRestore\" && this.wasClosed)) {\n\t\t\t\twindow.location.reload();\n\t\t\t} else if (e.type === \"VKWebAppViewHide\") {\n\t\t\t\tthis.wasClosed = true;\n\t\t\t}\n\t\t})\n \t}\n\n \tcomponentDidMount () {\n \t\tif (this.state.activeHash === 'notFound') {\n \t\t\tthis.sendError(\"Метод не найден\", {}, false)\n \t\t}\n \t}\n\n \tsendResponse = async (response={}, close=true) => {\n \t\t\n \t\tlet appPayload = {\n \t\t\tmethod: this.state.activeHash,\n \t\t\thash: window.location.hash.replace('#', ''),\n \t\t\t...response\n \t\t}\n\n \t\tif (!appPayload.error) appPayload.success = true;\n\n \t\tlet botId = this.hashParams.get('bot_id');\n\n    if (botId) {\n      await bridge.send(\"VKWebAppSendPayload\", {\n        \"group_id\": Number(botId), \n        \"payload\": appPayload\n      });\n    }\n\n    if (close) {\n    \t\n    \tif (this.queryParams.get('vk_platform') === 'desktop_web' || this.queryParams.get('vk_platform') === 'mobile_web') {\n    \t\twindow.history.back();\n    \t} else {\n    \t\tbridge.send(\"VKWebAppSetLocation\", {\"location\": window.location.hash + '&' + new Date().getTime()});\n    \t\tawait bridge.send(\"VKWebAppClose\", {\n\t\t      \"status\": \"success\", \n\t\t      \"payload\": appPayload\n\t\t    });\n    \t}\n    }\n \t}\n\n \tsendError = async (message=\"\", response={}, close=true) => {\n \t\treturn this.sendResponse({\n \t\t\t...response,\n \t\t\terror: true,\n \t\t\terror_message: message\n \t\t}, close)\n \t}\n\n\trequestToken = async () => {\n\n\t\tbridge.send(\"VKWebAppGetAuthToken\", {\n\t\t\t\"app_id\": APP_ID, \n\t\t\t\"scope\": \"status\"\n\t\t}).then(token => {\n\t\t\tthis.setState({\n\t\t\t\tuserToken: token.access_token,\n\t\t\t\tactivePanel: this.state.activePanel === 'gettingAuth' ? this.state.activeHash : this.state.activePanel\n\t\t\t});\n\t\t});\n\t}\n\n\tmakeApiCall = async (method, params={}) => {\n\t\tconst {userToken} = this.state;\n\t\treturn bridge.send(\"VKWebAppCallAPIMethod\", {\n      \"method\": method, \n      \"request_id\": String(new Date().getTime()), \n      \"params\": {\n      \t\"v\": \"5.103\",\n      \t\"access_token\": userToken,\n      \t...params\n      }\n    }).then(res => res.response)\n\t}\n\n\trender () {\n\t\tlet {activePanel} = this.state;\n\t\tconst {popout, userToken, hashParams, activeHash} = this.state;\n\t\t\n\t\tif (activePanel !== \"notFound\" && activePanel !== \"gettingAuth\" && activePanel !== \"hello\" && !userToken\n\t\t\t&& ['selectCountry', 'selectCity'].indexOf(activeHash) !== -1) {\n\t\t\tactivePanel = \"loading\";\n\t\t}\n\n\t\tif (activePanel === \"selectCountry\") {\n\t\t\tactivePanel = \"selectCity\"\n\t\t}\n\n\t\tif (activePanel === \"loading\") {\n\t\t\treturn (\n\t\t\t\t<PanelSpinner size=\"l\"/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t<HelloPanel id=\"hello\"/>\n\t\t\t\t<NotFoundPanel id=\"notFound\"/>\n\t\t\t\t<GetEmailPanel id=\"getEmail\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<ReadQRCodePanel id=\"readQRCode\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<DownloadFilePanel id=\"downloadFile\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<RouteDialogPanel id=\"routeDialog\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<JoinGroupPanel id=\"joinGroup\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetAppVersionPanel id=\"getAppVersion\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<AllowMessagesFromGroupPanel id=\"allowMessagesFromGroup\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetPhoneNumberPanel id=\"getPhoneNumber\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetCitiesPanel id=\"selectCity\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} userToken={userToken} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GettingAuthPanel id=\"gettingAuth\" activeHash={this.state.activeHash} onRequestToken={this.requestToken}/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nbridge.subscribe(console.log)\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nimport(\"./eruda\").then(eruda => {});\n\nwindow.onerror = function (errorMsg, url, lineNumber, columnNumber, error) {\n    let textAoutput = '<br/><pre>'+ errorMsg \n    + '\\n' +  url + ':' + lineNumber + ':' + columnNumber + '\\n' + (error || {}).stack + '</pre><br/>' + window.navigator.userAgent;\n\n    document.body.innerHTML = textAoutput;\n    console.error(error);\n    console.info(textAoutput);\n    return false;\n}\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(eruda => {}); //runtime download\n// }\n"],"sourceRoot":""}